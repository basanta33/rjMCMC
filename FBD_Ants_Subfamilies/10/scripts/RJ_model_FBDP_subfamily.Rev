num_bins <- 9

# parameters

# The FBD is conditioned on a starting time for the process, which is the origin time #
# Specify a uniform prior on the origin #
origin_time ~ dnUnif(100.0, 200.0)

# Specify a sliding-window move on the origin_time parameter #
# This move will be applied with 3 different window widths (delta) to help improve mixing #
moves.append( mvSlide(origin_time, delta=0.01, weight=5.0) )
moves.append( mvSlide(origin_time, delta=0.1,  weight=5.0) )
moves.append( mvSlide(origin_time, delta=1,    weight=5.0) )

# the mean fossilization rate
fossilization_rate_mean ~ dnExponential(10)
fossilization_rate_mean.setValue(0.09)
moves.append(mvScale(fossilization_rate_mean, weight=2))

# the fossilization-rate mixture model
for(i in 1:num_bins) {

	fossilization_mixture_rates_quantile[i] ~ dnUniform(0,1)
	moves.append(mvSlide(fossilization_mixture_rates_quantile[i], weight=5, delta=0.25, tune=false))
	fossilization_mixture_rates_quantile[i].setValue(0.5)
	fossilization_mixture_rates[i] := qexp(fossilization_mixture_rates_quantile[i], 1 / fossilization_rate_mean)

}

fossilization_mixture_weights ~ dnDirichlet( rep(1, num_bins) )
moves.append(mvBetaSimplex(fossilization_mixture_weights, weight=5))
moves.append(mvElementSwapSimplex(fossilization_mixture_weights, weight=5))

moves.append(mvUpDownScale(weight=5))

# joint moves on the quantiles
for(i in 1:num_bins) {
	for(j in 1:num_bins) {
		moves.append(mvUpDownSlide(weight=1, tune=false, lambda=0.05))
	}
}


# the mean speciation rate
speciation_rate_mean ~ dnExponential(10)
speciation_rate_mean.setValue(0.1)
moves.append(mvScale(speciation_rate_mean, weight=2))

# the speciation-rate mixture model
for(i in 1:num_bins) {

	speciation_mixture_rates_quantile[i] ~ dnUniform(0,1)
	moves.append(mvSlide(speciation_mixture_rates_quantile[i], weight=5, delta=0.25, tune=false))
	speciation_mixture_rates_quantile[i].setValue(0.5)
	speciation_mixture_rates[i] := qexp(speciation_mixture_rates_quantile[i], 1 / speciation_rate_mean)
}

speciation_mixture_weights ~ dnDirichlet( rep(1, num_bins) )
moves.append(mvBetaSimplex(speciation_mixture_weights, weight=5))
moves.append(mvElementSwapSimplex(speciation_mixture_weights, weight=5))

# the mean extinction rate
extinction_rate_mean ~ dnExponential(10)
extinction_rate_mean.setValue(0.09)
moves.append(mvScale(extinction_rate_mean, weight=2))

# the extinction-rate mixture model
for(i in 1:num_bins) {

	extinction_mixture_rates_quantile[i] ~ dnUniform(0,1)
	moves.append(mvSlide(extinction_mixture_rates_quantile[i], weight=5, delta=0.25, tune=false))
	extinction_mixture_rates_quantile[i].setValue(0.5)
	extinction_mixture_rates[i] := qexp(extinction_mixture_rates_quantile[i], 1 / extinction_rate_mean)

}

extinction_mixture_weights ~ dnDirichlet( rep(1, num_bins) )
moves.append(mvBetaSimplex(extinction_mixture_weights, weight=5))
moves.append(mvElementSwapSimplex(extinction_mixture_weights, weight=5))

moves.append(mvUpDownScale(weight=5))

# joint moves on the quantiles
for(i in 1:num_bins) {
	for(j in 1:num_bins) {
		moves.append(mvUpDownSlide(weight=1, tune=false, lambda=0.05))
	}
}

# draw the rates for each interval
for(i in 1:(num_bins + 1)) {

	# speciation rate
    speciation_rate[i] ~ dnMixture( speciation_mixture_rates, speciation_mixture_weights )
    moves.append(mvGibbsMixtureAllocation( speciation_rate[i], weight=2 ))

	# extinction rate
    extinction_rate[i] ~ dnMixture( extinction_mixture_rates, extinction_mixture_weights )
    moves.append(mvGibbsMixtureAllocation( extinction_rate[i], weight=2 ))

	#fossilization rate
	fossilization_rate[i] ~ dnMixture( fossilization_mixture_rates, fossilization_mixture_weights )
    moves.append(mvGibbsMixtureAllocation( fossilization_rate[i], weight=2 ))


}

rho <- .05
timeline = v(20, 40, 60, 80, 100, 120, 140, 160, 180)

fbd_dist = dnFBDP(originAge=origin_time, lambda=speciation_rate, mu=extinction_rate, psi=fossilization_rate, timeline = timeline, rho=rho, taxa=taxa, condition="sampling")
# defining clade constriants
Agroecomyrmecinae = clade("Agroecomyrmex_duisburgi", "Eulithomyrmex_rugosus", "Eulithomyrmex_striatus")
Amblyoponinae = clade("Amblyoponinae", "Amblyoponini", "Casaleia_eocenica", "Casaleia_inversa", "Casaleia_longiventris", "Casaleia_orientalis", "Myopopone_sinensis", "Stigmatomma_electrina", "Stigmatomma_groehni")
Aneuretinae = clade("Aneuretellus_deformis", "Britaneuretus_anglicus", "Burmomyrma_rossi", "Cananeuretus_occidentalis", "Mianeuretus", "Mianeuretus_eocenicus", "Mianeuretus_mirabilis", "Paraneuretus_dubovikoffi", "Paraneuretus_longicornis", "Paraneuretus_tornquisti", "Pityomyrmex_tornquisti", "Protaneuretus_succineus")
Armaniinae = clade("Archaeopone_kzylzharica", "Archaeopone_taylori", "Armania", "Armania_capitata", "Armania_curiosa", "Armania_pristina", "Armania_robusta", "Dolichomyrma_latipes", "Dolichomyrma_longiceps", "Khetania_mandibulata", "Orapia_minor", "Orapia_rayneri", "Poneropterus_sphecoides", "Pseudarmania_aberrans", "Pseudarmania_rasnitsyni")
Brownimeciinae = clade("Brownimecia_clavata")
Dolichoderinae = clade("Alloiomma_changweiensis", "Alloiomma_differentialis", "Asymphylomyrmex_balticus", "Azteca", "Azteca_alpha", "Azteca_eumeces", "Chronomyrmex_medicinehatensis", "Ctenobethylus_goepperti", "Dolichoderinae", "Dolichoderus", "Dolichoderus_(Hypoclinea)_passalomma", "Dolichoderus_affectus", "Dolichoderus_antiquus", "Dolichoderus_balticus", "Dolichoderus_brevicornis", "Dolichoderus_brevipalpis", "Dolichoderus_brevipennis", "Dolichoderus_bruneti", "Dolichoderus_caribbaeus", "Dolichoderus_coquandi", "Dolichoderus_cornutus", "Dolichoderus_dibolius", "Dolichoderus_dlusskyi", "Dolichoderus_elegans", "Dolichoderus_evolans", "Dolichoderus_explicans", "Dolichoderus_granulinotus", "Dolichoderus_heeri", "Dolichoderus_jiaoyanshanensis", "Dolichoderus_kohlsi", "Dolichoderus_kutscheri", "Dolichoderus_kutschlinicus", "Dolichoderus_lacinius", "Dolichoderus_longipennis", "Dolichoderus_longipilosus", "Dolichoderus_lucidus", "Dolichoderus_luridivenosus", "Dolichoderus_mesosternalis", "Dolichoderus_nanus", "Dolichoderus_obliteratus", "Dolichoderus_oviformis", "Dolichoderus_passalomma", "Dolichoderus_perkovskyi", "Dolichoderus_pilipes", "Dolichoderus_pinguis", "Dolichoderus_polessus", "Dolichoderus_polonicus", "Dolichoderus_primitivus", "Dolichoderus_prolaminatus", "Dolichoderus_punctatus", "Dolichoderus_robustus", "Dolichoderus_rohweri", "Dolichoderus_sculpturatus", "Dolichoderus_tauricus", "Dolichoderus_tertiarius", "Dolichoderus_transversipetiolaris", "Dolichoderus_vectensis", "Dolichoderus_vexillarius", "Dolichoderus_vlaskini", "Dolichoderus_zherichini", "Elaeomyrmex_coloradensis", "Elaeomyrmex_gracilis", "Elaphrodites_mutatus", "Elaphrodites_scutulatus", "Eldermyrmex_oblongiceps", "Electromyrmex_klebsi", "Emplastus_antiquus", "Emplastus_biamoensis", "Emplastus_britannicus", "Emplastus_dubius", "Emplastus_elongatus", "Emplastus_gurnetensis", "Emplastus_haueri", "Emplastus_hypolithus", "Emplastus_kozlovi", "Emplastus_macrops", "Emplastus_miocenicus", "Emplastus_ocellus", "Eotapinoma_compacta", "Eotapinoma_gracilis","Eotapinoma_macalpini", "Eurymyrmex_geologicus", "Forelius", "Gracilidris_humiloides", "Iridomyrmex", "Iridomyrmex_shandongicus", "Kotshkorkia_laticeps", "Ktunaxia_jucunda", "Leptomyrmex_neotropicus", "Leptomyrmula_maravignae", "Linepithema", "Liometopum", "Liometopum_bogdassarovi", "Liometopum_eremicum", "Liometopum_imhoffii", "Liometopum_incognitum", "Liometopum_lubricum", "Liometopum_miocenicum", "Liometopum_oligocenicum", "Liometopum_potamophilum", "Liometopum_scudderi", "Miomyrmex_impactus", "Miomyrmex_striatus", "Petraeomyrmex_minimus", "Proiridomyrmex_rotundatus", "Proiridomyrmex_vetulus", "Protazteca_capitata", "Protazteca_elongata", "Protazteca_eocenica", "Protazteca_hendersoni", "Protazteca_quadrata", "Tapinoma", "Tapinoma_aberrans", "Tapinoma_baculum", "Tapinoma_electrinum", "Tapinoma_minutissimum", "Tapinoma_troche", "Technomyrmex_caritatis", "Technomyrmex_deletus", "Technomyrmex_hispaniolae", "Technomyrmex_septentrionalis", "Usomyrma_mirabilis", "Yantaromyrmex_constrictus", "Yantaromyrmex_geinitzi", "Yantaromyrmex_intermedius", "Yantaromyrmex_mayrianum", "Yantaromyrmex_samlandicus", "Zherichinius_horribilis", "Zherichinius_rapax")
Dorylinae = clade("Acanthostichus_hispaniolicus", "Cylindromyrmex_antillanus", "Cylindromyrmex_electrinus", "Cylindromyrmex_inopinatus", "Dorylinae", "Lioponera", "Neivamyrmex", "Neivamyrmex_ectopus", "Procerapachys_annosus", "Procerapachys_favosus", "Procerapachys_sulcatus")
Ectatomminae = clade("Canapone_dentata", "Ectatomma_gracile", "Gnamptogenys_brunoi", "Gnamptogenys_casca", "Gnamptogenys_europaea", "Gnamptogenys_levinates", "Gnamptogenys_pristina", "Gnamptogenys_rohdendorfi", "Pseudectatomma_eocenica", "Pseudectatomma_striatula", "Rhytidoponera_gibsoni", "Rhytidoponera_kirghizorum", "Rhytidoponera_waipiata")
Formiciinae = clade("Titanomyrma_gigantea", "Titanomyrma_lubei", "Titanomyrma_simillima", "Acropyga", "Acropyga_glaesaria", "Camponotini", "Camponotites", "Camponotites_kraussei", "Camponotites_macropterus", "Camponotites_silvestris", "Camponotites_steinbachi", "Camponotites_xiejiaheensis", "Camponotus", "Camponotus_ambon", "Camponotus_ampullosus", "Camponotus_cockerelli", "Camponotus_compactus", "Camponotus_crozei", "Camponotus_curviansatus", "Camponotus_festinatus", "Camponotus_festinus", "Camponotus_fuscipennis", "Camponotus_gracilis", "Camponotus_heracleus", "Camponotus_herculeanus", "Camponotus_induratus", "Camponotus_lignitus", "Camponotus_longiventris", "Camponotus_longus", "Camponotus_luteus", "Camponotus_mengei", "Camponotus_microcephalus", "Camponotus_microthoracus", "Camponotus_mitis", "Camponotus_novotnyi", "Camponotus_obesus", "Camponotus_oeningensis", "Camponotus_palaeopterus", "Camponotus_penninervis", "Camponotus_petrifactus", "Camponotus_pictus", "Camponotus_pinguiculus", "Camponotus_plenus", "Camponotus_shanwangensis", "Camponotus_theobaldi", "Camponotus_tokunagai", "Camponotus_ullrichi", "Camponotus_vehemens", "Camponotus_vetus", "Cataglyphoides_constrictus", "Cataglyphoides_intermedius", "Chimaeromyrma_brachycephala", "Conoformica_bitterfeldiana", "Curtipalpulus_eocenicus", "Drymomyrmex_claripennis", "Drymomyrmex_fuscipennis", "Eoleptocerites_chinensis", "Eoleptocerites_fushunensis", "Eurytarsites_fushunensis", "Formica", "Formica_alsatica", "Formica_annosa", "Formica_arcana", "Formica_auxillacensis", "Formica_bauckhorni", "Formica_biamoensis", "Formica_buphthalma", "Formica_cantalica", "Formica_ceps", "Formica_cockerelli", "Formica_demersa", "Formica_eoptera", "Formica_flavifemoralis", "Formica_flori", "Formica_fusca", "Formica_gibbosa", "Formica_globiventris", "Formica_grandis", "Formica_gravida", "Formica_gustawi", "Formica_heteroptera", "Formica_horrida", "Formica_immersa", "Formica_kutscheri", "Formica_latinodosa", "Formica_lavateri", "Formica_linquensis", "Formica_longicollis", "Formica_lucida", "Formica_luteola", "Formica_macrocephala", "Formica_macrognatha", "Formica_macrophthalma", "Formica_maculipennis", "Formica_martynovi", "Formica_neorufibarbis", "Formica_nigra", "Formica_obscura", "Formica_orbata", "Formica_ovala", "Formica_palaeopolonica", "Formica_paleosibirica", "Formica_parexsecta", "Formica_parvula", "Formica_phaethusa", "Formica_pitoni", "Formica_primitiva", "Formica_primordialis", "Formica_procera", "Formica_pulchella", "Formica_quadrata", "Formica_radchenkoi", "Formica_robusta", "Formica_sepulta", "Formica_serresi", "Formica_seuberti", "Formica_strangulata", "Formica_surinamensis", "Formica_trigona", "Formica_tripartita", "Formica_ungeri", "Formica_zherikhini", "Formicinae", "Fushuniformica_spinata", "Gesomyrmex_bremii", "Gesomyrmex_breviceps", "Gesomyrmex_curiosus", "Gesomyrmex_flavescens", "Gesomyrmex_germanicus", "Gesomyrmex_hoernesi", "Gesomyrmex_incertus", "Gesomyrmex_macrops", "Gesomyrmex_magnus", "Gesomyrmex_pulcher", "Glaphyromyrmex_oligocenicus", "Heeridris_croaticus", "Huaxiaformica_mallepetiolata", "Imhoffia_nigra", "Imhoffia_pallida", "Kyromyrma_neffi", "Lasius", "Lasius_anthracinus", "Lasius_chambonensis", "Lasius_crispus", "Lasius_epicentrus", "Lasius_globularis", "Lasius_glom", "Lasius_inflatus", "Lasius_longaevus", "Lasius_longipennis", "Lasius_mordicus", "Lasius_nemorivagus", "Lasius_oblongus", "Lasius_occultatus", "Lasius_ophthalmicus", "Lasius_peritulus", "Lasius_pumilus", "Lasius_punctulatus", "Lasius_schiefferdeckeri", "Lasius_tertiarius", "Lasius_truncatus", "Lasius_validus", "Lasius_vetulus", "Leptogasteritus_capricornutes", "Leucotaphus_donisthorpei", "Leucotaphus_gurnetensis", "Liaoformica_longipetiolata", "Longiformica_dongzhouheensis", "Longiformica_guchengziensis", "Magnogasterites_curticornutus", "Myrmecorhynchus_novaeseelandiae", "Nylanderia_pygmaea", "Nylanderia_vetula", "Oecophylla_atavina", "Oecophylla_bartoniana", "Oecophylla_brischkei", "Oecophylla_crassinoda", "Oecophylla_eckfeldiana", "Oecophylla_grandimandibula", "Oecophylla_leakeyi", "Oecophylla_longiceps", "Oecophylla_megarche", "Oecophylla_obesa", "Oecophylla_praeclara", "Oecophylla_sicula", "Oecophylla_superba", "Orbicapitia_reticulata", "Ovalicapito_fushunensis", "Ovaligastrula_xilutianensis", "Plagiolepis_klinsmanni", "Plagiolepis_kuenowi", "Plagiolepis_labilis", "Plagiolepis_minutissima", "Plagiolepis_paradoxa", "Plagiolepis_singularis", "Plagiolepis_solitaria", "Plagiolepis_squamifera", "Plagiolepis_wheeleri", "Polyrhachis_annosus", "Prenolepis_henschei", "Prodimorphomyrmex_primigenius", "Protoformica_proformicoides", "Protomyrmica_atavia", "Protrechina_carpenteri", "Pseudocamponotus_elkoanus", "Pseudolasius_boreus", "Sicilomyrmex_corniger", "Sinoformica_longicapitata", "Sinotenuicapito_badis", "Wilsonia_liaoningensis", "Wilsonia_megagastrosa", "Zatania_electra", "Formicium_berryi", "Formicium_brodiei")

crown = clade("Agroecomyrmecinae", "Amblyoponinae", "Aneuretinae", "Armaniinae", "Brownimeciinae", "Dolichoderinae", "Dorylinae", "Ectatomminae", "Formiciinae") ### subfamily ###

# The will be a random variable of a constrained topology distribution that is governed by the FBD #
# this distribution will generate FBD trees that match the monophyly constraints defined above #
constraints = v(crown)
fbd_tree ~ dnConstrainedTopology(fbd_dist, constraints)

age_Agro := tmrca(fbd_tree, Agroecomyrmecinae)
age_Ambly := tmrca(fbd_tree, Amblyoponinae)
age_Aneu := tmrca(fbd_tree, Aneuretinae)
age_Arm := tmrca(fbd_tree, Armaniinae)
age_Brown := tmrca(fbd_tree, Brownimeciinae)
age_Doli := tmrca(fbd_tree, Dolichoderinae)
age_Dory := tmrca(fbd_tree, Dorylinae)
age_Ectatomma := tmrca(fbd_tree, Ectatommnae)
age_Form := tmrca(fbd_tree, Formicinae)
     moves.append(mvFNPR(fbd_tree, weight=15.0))

     moves.append(mvCollapseExpandFossilBranch(fbd_tree, origin_time, weight=6.0))

     moves.append(mvNodeTimeSlideUniform(fbd_tree, weight=40.0))

     moves.append(mvRootTimeSlideUniform(fbd_tree, origin_time, weight=5.0))


 # Setup the fossil tip sampling #

 # Use a for loop to create a uniform distribution on the occurence time for each fossil #

 # The boundaries of the uniform distribution are specified in the tsv file #

 fossils = fbd_tree.getFossils()
 for(i in 1:fossils.size())
 {
     t[i] := tmrca(fbd_tree, clade(fossils[i]))
	 t[i]
     a_i = fossils[i].getMinAge()
     b_i = fossils[i].getMaxAge()

    F[i] ~ dnUniform(t[i] - b_i, t[i] - a_i)
     F[i].clamp( 0 )
 }

 # Add a move to sample the fossil times #
moves.append( mvFossilTimeSlideUniform(fbd_tree, origin_time, weight=5.0) )


num_samp_anc := fbd_tree.numSampledAncestors()
